# Generated by Django 5.0.1 on 2025-09-02 21:47

import apps.users.models
import django.db.models.deletion
import django.utils.timezone
import tools.fields
import tools.utils
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("commons", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Criado em"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Atualizado em"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        null=True, verbose_name="Deletado em"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Username",
                    ),
                ),
                (
                    "cpf_cnpj",
                    tools.fields.CPFCNPJField(
                        blank=True,
                        max_length=14,
                        null=True,
                        unique=True,
                        verbose_name="CPF/CNPJ",
                    ),
                ),
                (
                    "rg",
                    tools.fields.RGField(
                        blank=True, max_length=50, null=True, verbose_name="RG"
                    ),
                ),
                (
                    "keycloak_id",
                    models.CharField(
                        blank=True,
                        help_text="ID do usuário no Keycloak para autenticação agnóstica",
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Keycloak ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("REGISTER_UNCOMPLETED", "Registro incompleto"),
                            ("ACTIVE", "Ativo"),
                            ("BANNED", "Banido"),
                            ("INACTIVE", "Inativo"),
                        ],
                        default="REGISTER_UNCOMPLETED",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False, verbose_name="Colaborador"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Ativo"),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de entrada",
                    ),
                ),
                (
                    "first_login_accomplished",
                    models.BooleanField(
                        default=False,
                        verbose_name="Já entrou na plataforma pela primeira vez?",
                    ),
                ),
                (
                    "terms",
                    models.BooleanField(
                        default=False,
                        verbose_name="Aceitou os termos e condições da plataforma?",
                    ),
                ),
                (
                    "receive_emails",
                    models.BooleanField(
                        default=False,
                        verbose_name="Aceitou receber comunicações via e-mail?",
                    ),
                ),
                (
                    "other_emails",
                    models.TextField(
                        blank=True, null=True, verbose_name="Outros e-mails"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="%(class)s_remover",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deletado por",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="%(class)s_updator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário",
                "verbose_name_plural": "Usuários",
                "ordering": ["-created_at"],
            },
            managers=[
                ("objects", apps.users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Criado em"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Atualizado em"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        null=True, verbose_name="Deletado em"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        editable=False,
                        verbose_name="Está ativo?",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Nome",
                    ),
                ),
                (
                    "cpf_cnpj",
                    tools.fields.CPFCNPJField(
                        max_length=14, verbose_name="CPF/CNPJ"
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="client",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="%(class)s_remover",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deletado por",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="%(class)s_updator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "pkid",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Criado em"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Atualizado em"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        null=True, verbose_name="Deletado em"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        editable=False,
                        verbose_name="Está ativo?",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Nome"),
                ),
                (
                    "phone",
                    tools.fields.PhoneField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Telefone fixo",
                    ),
                ),
                (
                    "cellphone",
                    tools.fields.CellphoneField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Telefone celular",
                    ),
                ),
                (
                    "born",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Data de nascimento",
                    ),
                ),
                (
                    "avatar",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=tools.utils.path_and_rename,
                        verbose_name="Avatar",
                    ),
                ),
                (
                    "address",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="commons.address",
                        verbose_name="Endereço",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="%(class)s_remover",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deletado por",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="%(class)s_updator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil",
                "verbose_name_plural": "Perfis",
                "ordering": ["-created_at"],
            },
        ),
    ]
